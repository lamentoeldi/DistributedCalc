// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: orchestator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LeftArg       float64                `protobuf:"fixed64,2,opt,name=left_arg,json=leftArg,proto3" json:"left_arg,omitempty"`
	RightArg      float64                `protobuf:"fixed64,3,opt,name=right_arg,json=rightArg,proto3" json:"right_arg,omitempty"`
	Op            string                 `protobuf:"bytes,4,opt,name=op,proto3" json:"op,omitempty"`
	OperationTime int64                  `protobuf:"varint,5,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	Final         bool                   `protobuf:"varint,6,opt,name=final,proto3" json:"final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_orchestator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_orchestator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_orchestator_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetLeftArg() float64 {
	if x != nil {
		return x.LeftArg
	}
	return 0
}

func (x *Task) GetRightArg() float64 {
	if x != nil {
		return x.RightArg
	}
	return 0
}

func (x *Task) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Task) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *Task) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Result        float64                `protobuf:"fixed64,2,opt,name=result,proto3" json:"result,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Final         bool                   `protobuf:"varint,4,opt,name=final,proto3" json:"final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_orchestator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_orchestator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_orchestator_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskResult) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *TaskResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskResult) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

var File_orchestator_proto protoreflect.FileDescriptor

const file_orchestator_proto_rawDesc = "" +
	"\n" +
	"\x11orchestator.proto\"\x9b\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bleft_arg\x18\x02 \x01(\x01R\aleftArg\x12\x1b\n" +
	"\tright_arg\x18\x03 \x01(\x01R\brightArg\x12\x0e\n" +
	"\x02op\x18\x04 \x01(\tR\x02op\x12%\n" +
	"\x0eoperation_time\x18\x05 \x01(\x03R\roperationTime\x12\x14\n" +
	"\x05final\x18\x06 \x01(\bR\x05final\"b\n" +
	"\n" +
	"TaskResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x01R\x06result\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x14\n" +
	"\x05final\x18\x04 \x01(\bR\x05final26\n" +
	"\fOrchestrator\x12&\n" +
	"\fProcessTasks\x12\v.TaskResult\x1a\x05.Task(\x010\x01B Z\x1ebackend/pkg/proto/orchestratorb\x06proto3"

var (
	file_orchestator_proto_rawDescOnce sync.Once
	file_orchestator_proto_rawDescData []byte
)

func file_orchestator_proto_rawDescGZIP() []byte {
	file_orchestator_proto_rawDescOnce.Do(func() {
		file_orchestator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestator_proto_rawDesc), len(file_orchestator_proto_rawDesc)))
	})
	return file_orchestator_proto_rawDescData
}

var file_orchestator_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_orchestator_proto_goTypes = []any{
	(*Task)(nil),       // 0: Task
	(*TaskResult)(nil), // 1: TaskResult
}
var file_orchestator_proto_depIdxs = []int32{
	1, // 0: Orchestrator.ProcessTasks:input_type -> TaskResult
	0, // 1: Orchestrator.ProcessTasks:output_type -> Task
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_orchestator_proto_init() }
func file_orchestator_proto_init() {
	if File_orchestator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestator_proto_rawDesc), len(file_orchestator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestator_proto_goTypes,
		DependencyIndexes: file_orchestator_proto_depIdxs,
		MessageInfos:      file_orchestator_proto_msgTypes,
	}.Build()
	File_orchestator_proto = out.File
	file_orchestator_proto_goTypes = nil
	file_orchestator_proto_depIdxs = nil
}
