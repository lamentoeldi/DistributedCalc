openapi: 3.1.0
info:
  title: Distributed calculator API
  description: Distributed calculator API
  version: 1
servers:
  - url: 'http://localhost:8080'
tags:
  - name: Client API
    description: API for client requests
  - name: Auth
    description: API for client authorization
paths:
  /api/v1/calculate:
    post:
      tags:
        - Client API
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: 'Bearer <access_token>'
        - in: header
          name: Refresh-Token
          required: true
          schema:
            type: string
            example: '<refresh_token>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateRequest'
      description: Add new expression to evaluate
      responses:
        201:
          description: Expression successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateResponse'
        400:
          description: Request body is invalid
        401:
          description: No JWT was provided with request
        422:
          description: Expression is invalid
  /api/v1/expressions:
    get:
      tags:
        - Client API
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: 'Bearer <access_token>'
        - in: header
          name: Refresh-Token
          required: true
          schema:
            type: string
            example: '<refresh_token>'
      description: Get all expressions
      responses:
        200:
          description: Expressions successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  expressions:
                    $ref: '#/components/schemas/ExpressionsResponse'
        401:
          description: No JWT was provided
        404:
          description: No expressions are being processed
  /api/v1/expressions/{id}:
    get:
      tags:
        - Client API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: 'Bearer <access_token>'
        - in: header
          name: Refresh-Token
          required: true
          schema:
            type: string
            example: '<refresh_token>'

      description: Get expression by ID
      responses:
        200:
          description: Expression successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  expression:
                    $ref: '#/components/schemas/Expression'
        400:
          description: Invalid ID path parameter
        401:
          description: No JWT was provided
        404:
          description: Expression not found
  /api/v1/register:
    post:
      tags:
        - Auth
      requestBody:
        required: true
        $ref: '#/components/schemas/UserCredentials'
      responses:
        200:
          description: Successful registration
        400:
          description: Invalid request body
        409:
          description: Login is already taken
  /api/v1/login:
    post:
      tags:
        - Auth
      requestBody:
        required: true
        $ref: '#/components/schemas/UserCredentials'
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTTokens'
        400:
          description: Invalid request body
        401:
          description: Invalid credentials
components:
  schemas:
    UserCredentials:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    JWTTokens:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
    Expression:
      type: object
      properties:
        id:
          type: int
          example: 0
        status:
          type: string
          example: "completed"
        result: 
          type: float
          example: 6.0
    CalculateRequest:
      type: object
      properties:
        expression:
          type: string
          example: "2 + 2 * 2"
    CalculateResponse:
      type: object
      properties:
        id:
          type: int
          example: 0
    ExpressionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Expression'
    Task:
      type: object
      properties:
        id:
          type: int
          example: 0
        arg1:
          type: float
          example: 3.5
        arg2:
          type: float
          example: 2.0
        operation:
          type: string
          example: "+"
        operation_time:
          type: float
          example: 0.01
    CompletedTask:
      type: object
      properties:
        id:
          type: int
          example: 0
        result:
          type: float
          example: 7.0